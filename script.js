var _0x4395 = ['url(\x27http://unifox.kr/wooju/tetris/image/6.PNG\x27)', 'backgroundImage', '#ff0033', 'next_block', '#00ffff', 'which', 'url(\x27http://unifox.kr/wooju/tetris/image/0.PNG\x27)', 'fillRect', 'floor', 'getElementById', 'random', 'innerHTML', 'bot_save', 'score', '#000', 'push', 'url(\x27http://unifox.kr/wooju/tetris/image/2.1.PNG\x27)', 'style', 'url(\x27http://unifox.kr/wooju/tetris/image/2.PNG\x27)', '#ff6633', 'slice', 'fillStyle', 'lightgreen', '#cc0099', '#ffcc00', 'url(\x27http://unifox.kr/wooju/tetris/image/1.PNG\x27)', 'url(\x27http://unifox.kr/wooju/tetris/image/6.1.PNG\x27)', 'getContext', 'display', 'url(\x27http://unifox.kr/wooju/tetris/image/3.1.PNG\x27)', '#ffcc33', '#33cc33', 'url(\x27http://unifox.kr/wooju/tetris/image/0.1.PNG\x27)', 'url(\x27http://unifox.kr/wooju/tetris/image/3.PNG\x27)', 'url(\x27http://unifox.kr/wooju/tetris/image/5.1.PNG\x27)', 'width', 'url(\x27http://unifox.kr/wooju/tetris/image/5.PNG\x27)', 'bot_next_block', 'canvas', 'url(\x27http://unifox.kr/wooju/tetris/image/4.1.PNG\x27)', 'url(\x27http://unifox.kr/wooju/tetris/image/4.PNG\x27)', 'save'];
(function(_0x3e2803, _0x5a2eed) {
    var _0x2c5134 = function(_0x5d3c5f) {
        while (--_0x5d3c5f) {
            _0x3e2803['push'](_0x3e2803['shift']());
        }
    };
    _0x2c5134(++_0x5a2eed);
}(_0x4395, 0xd2));
var _0x4f91 = function(_0x3e2803, _0x5a2eed) {
    _0x3e2803 = _0x3e2803 - 0x0;
    var _0x2c5134 = _0x4395[_0x3e2803];
    return _0x2c5134;
};
const BLOCK_SIZE = 0x1;
const canvas = document['getElementById'](_0x4f91('0x1c'));
const ctx = canvas['getContext']('2d');
const bot_canvas = document[_0x4f91('0x9')]('bot-display');
const bot_ctx = bot_canvas[_0x4f91('0x1b')]('2d');
const GAME_MODE = 0x1;
const GAME_OVER = 0x2;
var Mode = GAME_MODE;
var BOT_Mode = GAME_MODE;
var playing = !![];
var change = 0x1;
var bot_change = 0x1;
ctx['canvas'][_0x4f91('0x23')] = 0xa * 0x1e;
ctx[_0x4f91('0x26')]['height'] = 0x14 * 0x1e;
bot_ctx[_0x4f91('0x26')][_0x4f91('0x23')] = 0xa * 0x1e;
bot_ctx[_0x4f91('0x26')]['height'] = 0x14 * 0x1e;
var map = [
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
];
var bot_map = [
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1]
];
var score = 0x0;
var bot_score = 0x0;
var speed = 0xfa;
var bot_speed = 0x64;
var block_num = Math[_0x4f91('0x8')](Math['random']() * 6.9);
var next_block_num = Math[_0x4f91('0x8')](Math[_0x4f91('0xa')]() * 6.9);
var block_x = 0x4;
var block_y = 0x0;
var block;
var block_now;
var change_block = 0xc7;
var bot_block_num = Math[_0x4f91('0x8')](Math['random']() * 6.9);
var bot_next_block_num = Math[_0x4f91('0x8')](Math[_0x4f91('0xa')]() * 6.9);
var bot_block_x = 0x4;
var bot_block_y = 0x0;
var bot_block;
var bot_block_now;
var bot_change_block = 0xc7;

function block_init() {
    block = new Array();
    tmp = new Array();
    tmp[_0x4f91('0xf')](0x0, 0x0);
    tmp[_0x4f91('0xf')](0x0, 0x1);
    tmp[_0x4f91('0xf')](0x0, 0x2);
    tmp[_0x4f91('0xf')](0x0, 0x3);
    block[_0x4f91('0xf')](tmp);
    tmp = new Array();
    tmp[_0x4f91('0xf')](0x0, 0x0);
    tmp[_0x4f91('0xf')](0x0, 0x1);
    tmp['push'](0x0, 0x2);
    tmp[_0x4f91('0xf')](0x1, 0x1);
    block[_0x4f91('0xf')](tmp);
    tmp = new Array();
    tmp[_0x4f91('0xf')](0x0, 0x0);
    tmp[_0x4f91('0xf')](0x0, 0x1);
    tmp[_0x4f91('0xf')](0x1, 0x1);
    tmp[_0x4f91('0xf')](0x1, 0x2);
    block[_0x4f91('0xf')](tmp);
    tmp = new Array();
    tmp['push'](0x0, 0x1);
    tmp[_0x4f91('0xf')](0x0, 0x2);
    tmp['push'](0x1, 0x0);
    tmp[_0x4f91('0xf')](0x1, 0x1);
    block[_0x4f91('0xf')](tmp);
    tmp = new Array();
    tmp[_0x4f91('0xf')](0x0, 0x0);
    tmp[_0x4f91('0xf')](0x0, 0x1);
    tmp[_0x4f91('0xf')](0x1, 0x0);
    tmp['push'](0x1, 0x1);
    block[_0x4f91('0xf')](tmp);
    tmp = new Array();
    tmp[_0x4f91('0xf')](0x0, 0x0);
    tmp[_0x4f91('0xf')](0x0, 0x1);
    tmp[_0x4f91('0xf')](0x0, 0x2);
    tmp['push'](0x1, 0x0);
    block['push'](tmp);
    tmp = new Array();
    tmp[_0x4f91('0xf')](0x0, 0x0);
    tmp[_0x4f91('0xf')](0x1, 0x0);
    tmp['push'](0x1, 0x1);
    tmp[_0x4f91('0xf')](0x1, 0x2);
    block[_0x4f91('0xf')](tmp);
}

function bot_block_init() {
    bot_block = new Array();
    bot_tmp = new Array();
    bot_tmp['push'](0x0, 0x0);
    bot_tmp['push'](0x0, 0x1);
    bot_tmp[_0x4f91('0xf')](0x0, 0x2);
    bot_tmp[_0x4f91('0xf')](0x0, 0x3);
    bot_block[_0x4f91('0xf')](bot_tmp);
    bot_tmp = new Array();
    bot_tmp['push'](0x0, 0x0);
    bot_tmp[_0x4f91('0xf')](0x0, 0x1);
    bot_tmp['push'](0x0, 0x2);
    bot_tmp[_0x4f91('0xf')](0x1, 0x1);
    bot_block[_0x4f91('0xf')](bot_tmp);
    bot_tmp = new Array();
    bot_tmp[_0x4f91('0xf')](0x0, 0x0);
    bot_tmp[_0x4f91('0xf')](0x0, 0x1);
    bot_tmp[_0x4f91('0xf')](0x1, 0x1);
    bot_tmp[_0x4f91('0xf')](0x1, 0x2);
    bot_block[_0x4f91('0xf')](bot_tmp);
    bot_tmp = new Array();
    bot_tmp[_0x4f91('0xf')](0x0, 0x1);
    bot_tmp[_0x4f91('0xf')](0x0, 0x2);
    bot_tmp[_0x4f91('0xf')](0x1, 0x0);
    bot_tmp[_0x4f91('0xf')](0x1, 0x1);
    bot_block[_0x4f91('0xf')](bot_tmp);
    bot_tmp = new Array();
    bot_tmp[_0x4f91('0xf')](0x0, 0x0);
    bot_tmp['push'](0x0, 0x1);
    bot_tmp[_0x4f91('0xf')](0x1, 0x0);
    bot_tmp[_0x4f91('0xf')](0x1, 0x1);
    bot_block['push'](bot_tmp);
    bot_tmp = new Array();
    bot_tmp[_0x4f91('0xf')](0x0, 0x0);
    bot_tmp['push'](0x0, 0x1);
    bot_tmp['push'](0x0, 0x2);
    bot_tmp[_0x4f91('0xf')](0x1, 0x0);
    bot_block[_0x4f91('0xf')](bot_tmp);
    bot_tmp = new Array();
    bot_tmp[_0x4f91('0xf')](0x0, 0x0);
    bot_tmp[_0x4f91('0xf')](0x1, 0x0);
    bot_tmp[_0x4f91('0xf')](0x1, 0x1);
    bot_tmp[_0x4f91('0xf')](0x1, 0x2);
    bot_block[_0x4f91('0xf')](bot_tmp);
}

function map_reset() {
    for (i = 0x0; i < 0x14; i++) {
        for (j = 0x0; j < 0xa; j++) {
            map[i][j] = 0x0;
            bot_map[i][j] = 0x0;
        }
    }
}

function play() {
    if (playing == ![]) return;
    score = 0x0;
    bot_score = 0x0;
    block_init();
    bot_block_init();
    map_reset();
    Mode = GAME_MODE;
    BOT_Mode = GAME_MODE;
    block_now = block[block_num]['slice']();
    bot_block_now = bot_block[bot_block_num][_0x4f91('0x14')]();
    setInterval(Run, speed);
    playing = ![];
}

function reset() {
    speed = 0x12c;
    bot_speed = 0x12c;
    score = 0x0;
    bot_score = 0x0;
    map_reset();
    block_x = 0x4;
    block_y = 0x0;
    bot_block_x = 0x4;
    bot_block_y = 0x0;
}
var a = 0x0;
var add_x;
var turn_count;
var turn_bool = !![];

function BOT_map_check() {
    var _0x8c5b34 = bot_block_now;
    var _0x4ae49f = [0x0, 0x0, 0x0, 0x0];
    var _0x49befb = [0x0, 0x0, 0x0, 0x0];
    var _0x23d682 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];
    var _0x448a02 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];
    var _0x5dd44f = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];
    var _0x5b7235 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];
    var _0x456c2d = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];
    var _0x490ef4 = 0x0;
    var _0x192417 = ![];
    var _0x2d68dc = 0x0;
    var _0x447dab = 0x2540be400;
    turn_count = 0x0;
    var _0x21eb3d = 0x0;
    var _0x50bb13 = 0x2710;
    var _0x2420ac = 0x0;
    var _0x3fc647 = 0x0;
    var _0x3f81b1 = !![];
    var _0x38f61b = 0x0;
    var _0x287f94 = 0x0;
    var _0x2c8372 = 0x0;
    add_x = 0x0;
    var _0x13a2f1 = 0x4;
    if (bot_block_num == 0x0) _0x490ef4 = 0x6;
    else if (bot_block_num == 0x4) _0x490ef4 = 0x9;
    else {
        _0x490ef4 = 0x7;
    }
    if (bot_block_num == 0x0) _0x2d68dc = 0x4;
    else if (bot_block_num == 0x4) _0x2d68dc = 0x2;
    else _0x2d68dc = 0x3;
    if (bot_block_num == 0x0) _0x13a2f1 = 0x2;
    for (ai_i = 0x0; ai_i < _0x13a2f1; ai_i++) {
        _0x23d682 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];
        _0x5b7235 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];
        _0x448a02 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];
        _0x5dd44f = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];
        _0x456c2d = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];
        bot_block_x = 0x0;
        _0x2c8372 = 0x0;
        if (bot_block_num == 0x0 && turn_count == 0x0) {
            _0x2d68dc = 0x4;
            _0x490ef4 = 0x7;
        } else if (bot_block_num == 0x0 && turn_count == 0x1) {
            _0x2d68dc = 0x1;
            _0x490ef4 = 0xa;
        } else if (bot_block_num == 0x4) {
            _0x2d68dc = 0x2;
            _0x490ef4 = 0x8;
        } else {
            if (turn_count % 0x2 == 0x0) {
                _0x2d68dc = 0x3;
                _0x490ef4 = 0x8;
            } else if (turn_count % 0x2 != 0x0) {
                _0x2d68dc = 0x2;
                _0x490ef4 = 0x9;
            }
        }
        bot_block_y = 0x3;
        for (i = 0x0; i < 0x64; i++) {
            BOT_move_left();
        }
        _0x2c8372 = bot_block_x;
        bot_block_y = 0x0;
        for (ai_j = 0x0; ai_j < _0x490ef4; ai_j++) {
            _0x38f61b = 0x0;
            _0x192417 = ![];
            _0x3f81b1 = !![];
            BOT_block_fall();
            for (k = 0x0; k < 0x8; k += 0x2) {
                bot_auto_y = bot_block_y + bot_block_now[k];
                bot_auto_x = _0x2c8372 + bot_block_now[k + 0x1];
                if (bot_map[bot_auto_y][bot_auto_x] == 0x0) bot_map[bot_auto_y][bot_auto_x] = 0xc8;
            }
            for (ai_x = 0x0; ai_x < 0xa; ai_x++) {
                _0x192417 = ![];
                for (ai_y = 0x0; ai_y < 0x14; ai_y++) {
                    if (_0x192417 && bot_map[ai_y][ai_x] == 0x0) {
                        _0x448a02[ai_j] += 0x1;
                    }
                    if (bot_map[ai_y][ai_x] != 0x0) {
                        _0x192417 = !![];
                    }
                }
            }
            _0x23d682[ai_j] += _0x448a02[ai_j] * 0xa;
            for (ai_x = 0x0; ai_x < 0xa; ai_x++) {
                for (ai_y = 0x0; ai_y < 0x14; ai_y++) {
                    if (bot_map[ai_y][ai_x] != 0x0) {
                        _0x5dd44f[ai_j] += (0x14 - ai_y) * (0x14 - ai_y);
                        break;
                    }
                }
            }
            _0x23d682[ai_j] += _0x5dd44f[ai_j];
            for (k = 0x0; k < 0x8; k += 0x2) {
                bot_auto_y = bot_block_y + bot_block_now[k];
                bot_auto_x = _0x2c8372 + bot_block_now[k + 0x1];
                if (bot_map[bot_auto_y][bot_auto_x] == 0xc8) bot_map[bot_auto_y][bot_auto_x] = 0x0;
            }
            _0x2c8372++;
            BOT_move_right();
            bot_block_y = 0x0;
        }
        score_min = 0x2540be400;
        for (ai_check = 0x0; ai_check < _0x490ef4; ai_check++) {
            if (_0x23d682[ai_check] < score_min) {
                score_min = _0x23d682[ai_check];
                _0x4ae49f[ai_i] = ai_check;
            }
        }
        _0x49befb[ai_i] = score_min;
        bot_block_y = 0x0;
        bot_block_x = 0x2;
        turn_count++;
        BOT_TurnBlock();
        bot_block_y = 0x0;
        bot_block_x = 0x2;
    }
    var _0x2955fe = -0x1;
    _0x50bb13 = 0x2710;
    for (ai_z = 0x0; ai_z < _0x13a2f1; ai_z++) {
        if (_0x49befb[ai_z] < _0x50bb13) {
            _0x2420ac = _0x4ae49f[ai_z];
            _0x50bb13 = _0x49befb[ai_z];
            _0x2955fe = ai_z;
        }
    }
    bot_block_now = _0x8c5b34;
    bot_block_y = 0x0;
    _0x2c8372 = 0x0;
    bot_save_x = bot_block_x;
    turn_bool = ![];
    for (i = bot_block_x; i < bot_block_x + _0x2420ac; i++) {
        _0x2c8372++;
    }
    if (_0x2955fe == 0x1) {
        BOT_TurnBlock();
    }
    if (_0x2955fe == 0x2) {
        BOT_TurnBlock();
        BOT_TurnBlock();
    }
    if (_0x2955fe == 0x3) {
        BOT_TurnBlock();
        BOT_TurnBlock();
        BOT_TurnBlock();
        _0x2c8372--;
    }
    if (bot_block_num == 0x0 && bot_block_now[0x7] != 0x0) {
        _0x2c8372++;
    }
    bot_block_x = _0x2c8372;
    BOT_block_fall();
    return;
}

function Run() {
    a++;
    if (CheckBlock()) {
        Mode = GAME_OVER;
    }
    if (BOT_CheckBlock()) {
        Mode = GAME_OVER;
    }
    if (Mode == GAME_MODE) {
        score_up();
        if (a % 0x1 == 0x0) {
            BOT_map_check();
        }
        if (block_y == 0x0) {
            change = 0x1;
        }
        if (bot_block_y == 0x0) {
            bot_change = 0x1;
        }
        block_y++;
        bot_block_y++;
        if (BOT_CheckBlock()) {
            bot_block_y--;
            for (k = 0x0; k < 0x8; k += 0x2) {
                bot_asd_y = bot_block_y + bot_block_now[k];
                bot_asd_x = bot_block_x + bot_block_now[k + 0x1];
                bot_map[bot_asd_y][bot_asd_x] = 0x1;
            }
            line = 0x0;
            for (i = 0x0; i < 0x14; i++) {
                bot_sum = 0x0;
                for (j = 0x0; j < 0xa; j++) {
                    if (bot_map[i][j] != 0x0) {
                        bot_sum++;
                    }
                }
                if (bot_sum >= 0xa) {
                    for (k = i; k > 0x0; k--) {
                        for (j = 0x0; j < 0xa; j++) {
                            bot_map[k][j] = bot_map[k - 0x1][j];
                        }
                    }
                }
                bot_score_up(bot_sum);
            }
            bot_block_y = 0x0;
            bot_block_x = 0x4;
            bot_block_num = bot_next_block_num;
            if (a % 0xb == 0x0) {
                bot_next_block_num = 0x0;
            } else {
                bot_next_block_num = Math[_0x4f91('0x8')](Math[_0x4f91('0xa')]() * 6.9);
            }
            bot_block_now = bot_block[bot_block_num][_0x4f91('0x14')]();
        }
        if (CheckBlock()) {
            block_y--;
            for (k = 0x0; k < 0x8; k += 0x2) {
                check_y = block_y + block_now[k];
                check_x = block_x + block_now[k + 0x1];
                map[check_y][check_x] = 0x1;
            }
            line = 0x0;
            for (i = 0x0; i < 0x14; i++) {
                sum = 0x0;
                for (j = 0x0; j < 0xa; j++) {
                    if (map[i][j] != 0x0) {
                        sum++;
                    }
                }
                if (sum >= 0xa) {
                    for (k = i; k > 0x0; k--) {
                        for (j = 0x0; j < 0xa; j++) {
                            map[k][j] = map[k - 0x1][j];
                        }
                    }
                }
                score_up(sum);
            }
            block_y = 0x0;
            block_x = 0x4;
            block_num = next_block_num;
            if (a % 0xb == 0x0) {
                next_block_num = 0x0;
            } else {
                next_block_num = Math[_0x4f91('0x8')](Math[_0x4f91('0xa')]() * 6.9);
            }
            block_now = block[block_num][_0x4f91('0x14')]();
        }
        if (CheckBlock()) block_now = block_save[_0x4f91('0x14')]();
        if (BOT_CheckBlock()) {
            bot_block_now = bot_block_Save[_0x4f91('0x14')]();
        }
        Draw();
    }
}

function CheckBlock() {
    for (k = 0x0; k < 0x8; k += 0x2) {
        check_y = block_y + block_now[k];
        check_x = block_x + block_now[k + 0x1];
        if (check_y < 0x0) continue;
        if (check_x < 0x0 || check_x >= 0xa || check_y >= 0x14 || map[check_y][check_x] != 0x0) return !![];
    }
    return ![];
}

function BOT_CheckBlock() {
    for (k = 0x0; k < 0x8; k += 0x2) {
        bot_check_y = bot_block_y + bot_block_now[k];
        bot_check_x = bot_block_x + bot_block_now[k + 0x1];
        if (bot_check_y < 0x0) continue;
        if (bot_check_x < 0x0 || bot_check_x >= 0xa || bot_check_y >= 0x14 || bot_map[bot_check_y][bot_check_x] == 0x1) return !![];
    }
    return ![];
}

function block_img() {
    if (change_block == 0x0) {
        document[_0x4f91('0x9')](_0x4f91('0x29'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x20');
    } else if (change_block == 0x1) {
        document[_0x4f91('0x9')](_0x4f91('0x29'))[_0x4f91('0x11')][_0x4f91('0x1')] = 'url(\x27http://unifox.kr/wooju/tetris/image/1.1.PNG\x27)';
    } else if (change_block == 0x2) {
        document[_0x4f91('0x9')](_0x4f91('0x29'))['style'][_0x4f91('0x1')] = _0x4f91('0x10');
    } else if (change_block == 0x3) {
        document[_0x4f91('0x9')](_0x4f91('0x29'))['style'][_0x4f91('0x1')] = _0x4f91('0x1d');
    } else if (change_block == 0x4) {
        document[_0x4f91('0x9')](_0x4f91('0x29'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x27');
    } else if (change_block == 0x5) {
        document[_0x4f91('0x9')](_0x4f91('0x29'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x22');
    } else if (change_block == 0x6) {
        document['getElementById'](_0x4f91('0x29'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x1a');
    }
    if (next_block_num == 0x0) {
        document[_0x4f91('0x9')]('next_block')[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x6');
    } else if (next_block_num == 0x1) {
        document[_0x4f91('0x9')](_0x4f91('0x3'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x19');
    } else if (next_block_num == 0x2) {
        document[_0x4f91('0x9')](_0x4f91('0x3'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x12');
    } else if (next_block_num == 0x3) {
        document[_0x4f91('0x9')](_0x4f91('0x3'))['style'][_0x4f91('0x1')] = _0x4f91('0x21');
    } else if (next_block_num == 0x4) {
        document[_0x4f91('0x9')]('next_block')[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x28');
    } else if (next_block_num == 0x5) {
        document[_0x4f91('0x9')](_0x4f91('0x3'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x24');
    } else if (next_block_num == 0x6) {
        document[_0x4f91('0x9')](_0x4f91('0x3'))[_0x4f91('0x11')]['backgroundImage'] = 'url(\x27http://unifox.kr/wooju/tetris/image/6.PNG\x27)';
    }
}

function bot_block_img() {
    if (bot_change_block == 0x0) {
        document['getElementById'](_0x4f91('0xc'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x20');
    } else if (bot_change_block == 0x1) {
        document['getElementById'](_0x4f91('0xc'))[_0x4f91('0x11')][_0x4f91('0x1')] = 'url(\x27http://unifox.kr/wooju/tetris/image/1.1.PNG\x27)';
    } else if (bot_change_block == 0x2) {
        document[_0x4f91('0x9')](_0x4f91('0xc'))[_0x4f91('0x11')]['backgroundImage'] = _0x4f91('0x10');
    } else if (bot_change_block == 0x3) {
        document[_0x4f91('0x9')](_0x4f91('0xc'))['style'][_0x4f91('0x1')] = _0x4f91('0x1d');
    } else if (bot_change_block == 0x4) {
        document[_0x4f91('0x9')](_0x4f91('0xc'))[_0x4f91('0x11')]['backgroundImage'] = 'url(\x27http://unifox.kr/wooju/tetris/image/4.1.PNG\x27)';
    } else if (bot_change_block == 0x5) {
        document[_0x4f91('0x9')](_0x4f91('0xc'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x22');
    } else if (bot_change_block == 0x6) {
        document[_0x4f91('0x9')](_0x4f91('0xc'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x1a');
    }
    if (bot_next_block_num == 0x0) {
        document[_0x4f91('0x9')]('bot_next_block')[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x6');
    } else if (bot_next_block_num == 0x1) {
        document['getElementById'](_0x4f91('0x25'))['style'][_0x4f91('0x1')] = 'url(\x27http://unifox.kr/wooju/tetris/image/1.PNG\x27)';
    } else if (bot_next_block_num == 0x2) {
        document[_0x4f91('0x9')](_0x4f91('0x25'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x12');
    } else if (bot_next_block_num == 0x3) {
        document[_0x4f91('0x9')]('bot_next_block')[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x21');
    } else if (bot_next_block_num == 0x4) {
        document['getElementById'](_0x4f91('0x25'))[_0x4f91('0x11')][_0x4f91('0x1')] = 'url(\x27http://unifox.kr/wooju/tetris/image/4.PNG\x27)';
    } else if (bot_next_block_num == 0x5) {
        document[_0x4f91('0x9')](_0x4f91('0x25'))[_0x4f91('0x11')][_0x4f91('0x1')] = _0x4f91('0x24');
    } else if (bot_next_block_num == 0x6) {
        document[_0x4f91('0x9')]('bot_next_block')[_0x4f91('0x11')]['backgroundImage'] = _0x4f91('0x0');
    }
}

function Draw() {
    block_img();
    bot_block_img();
    for (i = 0x0; i < 0x14; i++) {
        for (j = 0x0; j < 0xa; j++) {
            if (map[i][j] == 0x0) ctx[_0x4f91('0x15')] = '#000';
            else ctx[_0x4f91('0x15')] = _0x4f91('0x16');
            if (bot_map[i][j] == 0x0) bot_ctx[_0x4f91('0x15')] = _0x4f91('0xe');
            else if (bot_map[i][j] == 0xc8) {
                return;
            } else if (bot_map[i][j] == 0x1) {
                bot_ctx[_0x4f91('0x15')] = _0x4f91('0x16');
            }
            for (k = 0x0; k < 0x8; k += 0x2) {
                if (block_y + block_now[k] == i && block_x + block_now[k + 0x1] == j) {
                    block_color();
                }
                if (bot_block_y + bot_block_now[k] == i && bot_block_x + bot_block_now[k + 0x1] == j) {
                    bot_block_color();
                }
            }
            x = j * 0x1e;
            y = i * 0x1e;
            bot_x = j * 0x1e;
            bot_y = i * 0x1e;
            if (CheckBlock()) block_now = block_Save[_0x4f91('0x14')]();
            ctx[_0x4f91('0x7')](x, y, 0x1d, 0x1d);
            if (CheckBlock()) bot_block_now = bot_block_Save[_0x4f91('0x14')]();
            bot_ctx[_0x4f91('0x7')](bot_x, bot_y, 0x1d, 0x1d);
        }
    }
}

function bot_block_color() {
    if (bot_block_num == 0x0) {
        bot_ctx[_0x4f91('0x15')] = _0x4f91('0x13');
    }
    if (bot_block_num == 0x1) {
        bot_ctx['fillStyle'] = _0x4f91('0x18');
    }
    if (bot_block_num == 0x2) {
        bot_ctx[_0x4f91('0x15')] = _0x4f91('0x1e');
    }
    if (bot_block_num == 0x3) {
        bot_ctx['fillStyle'] = _0x4f91('0x4');
    }
    if (bot_block_num == 0x4) {
        bot_ctx['fillStyle'] = _0x4f91('0x2');
    }
    if (bot_block_num == 0x5) {
        bot_ctx[_0x4f91('0x15')] = '#cc0099';
    }
    if (bot_block_num == 0x6) {
        bot_ctx[_0x4f91('0x15')] = _0x4f91('0x1f');
    }
}

function block_color() {
    if (block_num == 0x0) {
        ctx[_0x4f91('0x15')] = _0x4f91('0x13');
    }
    if (block_num == 0x1) {
        ctx[_0x4f91('0x15')] = _0x4f91('0x18');
    }
    if (block_num == 0x2) {
        ctx[_0x4f91('0x15')] = _0x4f91('0x1e');
    }
    if (block_num == 0x3) {
        ctx[_0x4f91('0x15')] = _0x4f91('0x4');
    }
    if (block_num == 0x4) {
        ctx[_0x4f91('0x15')] = _0x4f91('0x2');
    }
    if (block_num == 0x5) {
        ctx[_0x4f91('0x15')] = _0x4f91('0x17');
    }
    if (block_num == 0x6) {
        ctx[_0x4f91('0x15')] = _0x4f91('0x1f');
    }
}

function onKeyDown(_0x31b954) {
    if (Mode == GAME_MODE) {
        if (_0x31b954[_0x4f91('0x5')] == 0x25) {
            block_x--;
            if (CheckBlock()) block_x++;
            else Draw();
        }
        if (_0x31b954[_0x4f91('0x5')] == 0x27) {
            block_x++;
            if (CheckBlock()) block_x--;
            else Draw();
        }
        if (_0x31b954[_0x4f91('0x5')] == 0x28) {
            block_y++;
            if (CheckBlock()) block_y--;
            else Draw();
        }
        if (_0x31b954['which'] == 0x26) {
            TurnBlock();
            if (CheckBlock()) block_now = block_now[_0x4f91('0x14')]();
            Draw();
        }
        if (_0x31b954[_0x4f91('0x5')] == 0x20) {
            Draw();
            while (0x1) {
                block_y++;
                if (CheckBlock()) {
                    block_y--;
                    break;
                }
            }
            Draw();
        }
        if (_0x31b954[_0x4f91('0x5')] == 0x5a) {
            TurnBlock();
            TurnBlock();
            TurnBlock();
            if (CheckBlock()) block_now = block_now[_0x4f91('0x14')]();
            Draw();
        }
        if (_0x31b954[_0x4f91('0x5')] == 0x43) {
            if (change_block == 0xc7) {
                block_x = 0x4;
                block_y = 0x1;
                change_block = block_num;
                block_num = next_block_num;
                next_block_num = Math[_0x4f91('0x8')](Math[_0x4f91('0xa')]() * 6.9);
                block_now = block[block_num][_0x4f91('0x14')]();
            } else {
                if (change == 0x1) {
                    block_x = 0x4;
                    block_y = 0x1;
                    sum = block_num;
                    block_num = change_block;
                    change_block = sum;
                    block_now = block[block_num]['slice']();
                    change = 0x0;
                }
            }
            Draw();
        }
    }
}

function TurnBlock() {
    if (block_num == 0x4) return;
    centerX = 0x1;
    centerY = 0x1;
    block_save = block_now[_0x4f91('0x14')]();
    for (i = 0x0; i < block_now['length']; i += 0x2) {
        y = block_now[i + 0x1] - centerX;
        x = -(block_now[i] - centerY);
        block_now[i] = y + centerY;
        block_now[i + 0x1] = x + centerX;
    }
    if (CheckBlock()) block_now = block_save['slice']();
}

function BOT_TurnBlock() {
    if (bot_block_num == 0x4) return;
    bot_block_x = 0x3;
    bot_block_y = 0x0;
    if (bot_block_num == 0x0) {
        bot_centerX = 0x1;
        bot_centerY = 0x1;
    } else {
        bot_centerX = 0x1;
        bot_centerY = 0x0;
    }
    bot_block_save = bot_block_now[_0x4f91('0x14')]();
    for (i = 0x0; i < 0x8; i += 0x2) {
        bot_y = bot_block_now[i + 0x1] - bot_centerX;
        bot_x = -(bot_block_now[i] - bot_centerY);
        bot_block_now[i] = bot_y + bot_centerY;
        bot_block_now[i + 0x1] = bot_x + bot_centerX;
    }
}

function BOT_block_change() {
    if (bot_change_block == 0xc7) {
        bot_block_x = 0x4;
        bot_block_y = 0x1;
        bot_change_block = bot_block_num;
        bot_block_num = bot_next_block_num;
        bot_next_block_num = Math[_0x4f91('0x8')](Math[_0x4f91('0xa')]() * 6.9);
        bot_block_now = bot_block[bot_block_num][_0x4f91('0x14')]();
    } else {
        if (bot_change == 0x1) {
            bot_block_x = 0x4;
            bot_block_y = 0x1;
            bot_sum = bot_block_num;
            bot_block_num = bot_change_block;
            bot_change_block = bot_sum;
            bot_block_now = bot_block[bot_block_num][_0x4f91('0x14')]();
            bot_change = 0x0;
        }
    }
    Draw();
}

function BOT_block_turn_zkey() {
    BOT_TurnBlock();
    BOT_TurnBlock();
    BOT_TurnBlock();
    if (BOT_CheckBlock()) bot_block_now = bot_block_now[_0x4f91('0x14')]();
    Draw();
}

function BOT_block_fall() {
    Draw();
    while (0x1) {
        bot_block_y++;
        if (BOT_CheckBlock()) {
            bot_block_y--;
            break;
        }
    }
    Draw();
}

function BOT_block_auto_fall() {
    Draw();
    while (0x1) {
        bot_auto_y++;
        if (BOT_CheckBlock()) {
            bot_auto_y--;
            break;
        }
    }
    Draw();
}

function BOT_block_up() {
    Draw();
    while (0x1) {
        bot_block_y--;
        if (BOT_CheckBlock()) {
            bot_block_y++;
            break;
        }
    }
    Draw();
}

function BOT_turn() {
    BOT_TurnBlock();
    if (BOT_CheckBlock()) bot_block_now = bot_block_now[_0x4f91('0x14')]();
    Draw();
}

function BOT_move_right() {
    bot_block_x++;
}

function BOT_move_left() {
    bot_block_x--;
    if (BOT_CheckBlock()) bot_block_x++;
    else Draw();
}

function score_up(_0x198d2b) {
    if (playing != ![]) return;
    if (_0x198d2b == 0xa) score += 0x64;
    var _0x1d8c33 = document[_0x4f91('0x9')](_0x4f91('0xd'));
    _0x1d8c33[_0x4f91('0xb')] = score;
}

function bot_score_up(_0x460ffb) {
    if (playing != ![]) return;
    if (_0x460ffb == 0xa) bot_score += 0x64;
    var _0x53be51 = document['getElementById']('bot_score');
    _0x53be51[_0x4f91('0xb')] = bot_score;
}
$(document)['keydown'](function(_0x1c07f1) {
    onKeyDown(_0x1c07f1);
});
